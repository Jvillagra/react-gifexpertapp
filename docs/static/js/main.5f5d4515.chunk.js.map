{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAkBhD,OACK,sBAAOC,SAXM,SAAEC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMd,SAEI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCTnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGjC,OACI,sBAAKc,UAAU,yCAAf,UAEI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCJJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEhBd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAJ6B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAuBtC,OAhBJC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAMtB,CAACpB,IAGOqB,EDjBqBK,CAAa1B,GAAjCa,EAL6B,EAKlCN,KAAaa,EALqB,EAKrBA,QAKhB,OACA,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAY,mBAAGJ,UAAU,oCAAb,qBAEd,qBAAKA,UAAU,YAAf,SAGIH,EAAOJ,KAAK,SAAAC,GAAG,OACP,cAAC,EAAD,eAEKA,GADCA,EAAIC,aErBjBgB,EAAe,WAAM,MAGIzC,mBAAS,CAAC,cAHd,mBAGzB0C,EAHyB,KAGb3C,EAHa,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAED,6BAES2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCf9B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5f5d4515.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport PropTypes from'prop-types';\r\n\r\n\r\nexport const AddCategory = ( { setCategories }) => {\r\n   \r\n    const [inputValue, setInputValue] = useState('');\r\n   \r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value);\r\n    }\r\n   \r\nconst handleSubmit = ( e ) => {\r\n    e.preventDefault();\r\n    \r\n    if(inputValue.trim().length > 2){\r\n        setCategories( cats => [ inputValue, ...cats]);\r\n        setInputValue('');\r\n    }\r\n    \r\n}\r\n\r\n   return (\r\n        <form  onSubmit={ handleSubmit }>\r\n          \r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n             />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async( category) => {\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=kEpq0z2eUxht7ecgX6CbvAhCsOIe9q9U`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url } ) => {\r\n   \r\n   //console.log({title, url})\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">   \r\n        \r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p> \r\n\r\n                           \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n/*import { getGifs } from '../helpers/getGifs'; */\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem'; \r\n\r\nexport const GifGrid = ({ category }) => {\r\n   \r\n\r\n   // const [images, setImages ] = useState([]);\r\n\r\nconst {data:images, loading } = useFetchGifs(category);\r\n\r\n\r\n   \r\n   \r\n    return (\r\n    <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n        { loading &&  <p className=\"animate__animated animate__fadeIn\">Loading</p>}\r\n        \r\n        <div className=\"card-grid\">       \r\n\r\n         {\r\n            images.map( img => (\r\n                    <GifGridItem \r\n                    key={ img.id }\r\n                    { ...img } />\r\n                       \r\n                    ))\r\n                    \r\n          }\r\n                \r\n                \r\n        </div>\r\n       \r\n    </>\r\n        \r\n    )\r\n}\r\n","\r\nimport { useState, useEffect } from \"react\";\r\nimport { getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\nconst [state, setstate] = useState({\r\n    data:[],\r\n    loading: true\r\n});\r\n\r\nuseEffect(() => {\r\n    \r\n    getGifs( category )\r\n        .then( imgs =>{\r\n                \r\n            setstate({\r\n                data:imgs,\r\n                loading: false\r\n            });\r\n\r\n         \r\n        })        \r\n\r\n}, [category])\r\n\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n  //  const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n  const [categories, setCategories] = useState(['One Punch']); \r\n\r\n//const handleAdd = () =>{\r\n //   setCategories([...categories,'HunterxHunter']);\r\n//}\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n            \r\n           <ol>\r\n                {\r\n                    categories.map( category =>( \r\n                        <GifGrid \r\n                        key={ category }\r\n                        category={ category }\r\n                        />\r\n                    )\r\n                    )\r\n                }\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}